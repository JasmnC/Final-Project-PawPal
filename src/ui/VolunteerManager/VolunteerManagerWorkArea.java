/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ui.VolunteerManager;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import model.EcoSystem.EcoSystem;
import model.Enterprise.VolunteerEnterprise;
import model.Network.Network;
import model.Organization.VolunteerManagementOrganization;
import model.Role.VolunteerRole;
import model.UserAccount.UserAccount;
import model.WorkQueue.VolunteerRequest;
import model.WorkQueue.WorkRequest;

/**
 *
 * @author anitachen
 */
public class VolunteerManagerWorkArea extends javax.swing.JPanel {

    private JPanel workArea;
    private VolunteerManagementOrganization organization;
    private VolunteerEnterprise enterprise;
    private Network network;
    private EcoSystem ecosystem;
    private UserAccount userAccount;    
    
    /** Creates new form VolunteerManagerWorkArea */
    public VolunteerManagerWorkArea(JPanel userProcessContainer, UserAccount account, VolunteerManagementOrganization organization, VolunteerEnterprise enterprise, Network network, EcoSystem ecosystem) {
        initComponents();
        
        this.workArea = userProcessContainer;
        this.userAccount = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.network = network;
        this.ecosystem = ecosystem;
        
        populateCombo();
        populateTable();
        
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkRequests = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        lblVolunteer = new javax.swing.JLabel();
        cmbVolunteer = new javax.swing.JComboBox();
        lblRequestOrigin = new javax.swing.JLabel();

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTitle.setText("Assign Volunteer to Volunteer Request");

        tblWorkRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Animal Shelter", "Volunteer Manager", "Volunteer Assigned", "Enterprise", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWorkRequests);

        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        lblVolunteer.setText("Volunteer:");

        cmbVolunteer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblRequestOrigin.setText("from: Animal Register Organization");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle)
                        .addGap(184, 184, 184)
                        .addComponent(lblRequestOrigin))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblVolunteer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbVolunteer, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAssign))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(lblRequestOrigin))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssign)
                    .addComponent(lblVolunteer)
                    .addComponent(cmbVolunteer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed

        UserAccount selectedVolunteer = (UserAccount) cmbVolunteer.getSelectedItem();
        
        int selectedRow = tblWorkRequests.getSelectedRow();

        if (selectedRow >= 0) {
            
            VolunteerRequest selectedRequest = (VolunteerRequest) tblWorkRequests.getValueAt(selectedRow, 0);
            if (selectedRequest.getStatus().equalsIgnoreCase("Completed")) {
                JOptionPane.showMessageDialog(null, "Request already completed. Please select another one.");
                return;
                
            } else {
                for (WorkRequest request : network.getWorkQueue().getWorkRequestList()){
                    if (((VolunteerRequest) request).getAssignedVolunteer() == selectedVolunteer 
                            && !request.getStatus().equals("Completed")){
                        JOptionPane.showMessageDialog(null, "This volunteer is not available. Please select another one.", "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
                if (selectedRequest.getStatus().equals("Assigned")){
                    JOptionPane.showMessageDialog(null, "This request has assigned volunteer. Please select another request.", "Warning", JOptionPane.WARNING_MESSAGE);
                } else {
                    selectedRequest.setReceiver(userAccount);
                    selectedRequest.setAssignedVolunteer(selectedVolunteer);
                    selectedRequest.setStatus("Assigned");
                    selectedVolunteer.getWorkQueue().getWorkRequestList().add(selectedRequest);
                    JOptionPane.showMessageDialog(null, "Volunteer Assigned","Information",JOptionPane.INFORMATION_MESSAGE);
                    populateTable();
                    }   
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please choose a request first", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
        }  
        
        
    }//GEN-LAST:event_btnAssignActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JComboBox cmbVolunteer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRequestOrigin;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblVolunteer;
    private javax.swing.JTable tblWorkRequests;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) tblWorkRequests.getModel();
        model.setRowCount(0);
        
        for (WorkRequest request : network.getWorkQueue().getWorkRequestList()){
            if (request instanceof VolunteerRequest){
                Object[] row = new Object[7];
                row[0] = request;
                row[1] = request.getSender();
                row[2] = request.getSender().getEnterprise();
                row[3] = request.getReceiver() == null ? null : request.getReceiver();
                row[4] = ((VolunteerRequest) request).getAssignedVolunteer();
                row[5] = request.getReceiver() == null ? null :request.getReceiver().getEnterprise();
                row[6] = request.getStatus();
                model.addRow(row);
            }
        }
        

    }

    private void populateCombo() {

        cmbVolunteer.removeAllItems();
        
        for (UserAccount ua : ecosystem.getUserAccountDirectory().getUserAccountList()) {
            if (ua.getRole() instanceof VolunteerRole && ua.getEnterprise() == enterprise) {
                cmbVolunteer.addItem(ua);
            }
        }
        
    }

}
